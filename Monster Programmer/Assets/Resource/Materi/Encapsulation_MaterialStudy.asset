%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ce02fc4033c7bce4ba931d5e6026fd40, type: 3}
  m_Name: Encapsulation_MaterialStudy
  m_EditorClassIdentifier: 
  typeSubject: 0
  clip: {fileID: 32900000, guid: 7d9f6d92fd9c161439b137530bf03186, type: 3}
  allSubject:
  - Encapsulation means wrapping data (variables) and methods (functions) together
    inside a class.
  - It protects the internal state of an object from being accessed or modified directly.
    Instead, data is accessed through methods.
  - "For example, instead of changing a person\u2019s age directly, you use a method
    like `SetAge(int age)` to update it."
  - Encapsulation is achieved using access modifiers like `private`, `protected`,
    and `public`.
  - This principle improves security, prevents misuse, and keeps the code more organized
    and easier to manage.
